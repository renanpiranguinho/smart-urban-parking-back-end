// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique()
  cpf        String       @unique()
  password   String
  is_active  Boolean      @default(false)
  role       Role         @default(USER)
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt()
  deleted_at DateTime?
  cards      CreditCard[]
  Vehicle    Vehicle[]
}

model CreditCard {
  id              Int       @id @default(autoincrement())
  owner           User      @relation(fields: [ownerId], references: [id])
  ownerId         Int
  cardName        String
  flag            String
  number          String
  expirationMonth Int
  expirationYear  Int
  cvc             Int
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt()
  deleted_at      DateTime?
}

model Vehicle {
  id            Int       @id @default(autoincrement())
  name          String
  license_plate String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt()
  user          User?      @relation(fields: [userId], references: [id])
  userId        Int?
  Payment       Payment[]
}

enum Role {
  USER
  FISCAL
  ADMIN
}

enum Status {
  pending
  approved
  inprocess
  inmediation
  rejected
  cancelled
  refunded
  chargedback
}

model Payment {
  id            Int       @id @default(autoincrement())
  name          String
  cpf           String
  credits       Int
  region        Int
  amount        Float
  vehicle       Vehicle?  @relation(fields: [vehicleId], references: [id])
  vehicleId     Int?
  license_plate String
  description   String?
  method        String
  status        Status    @default(pending)
  created_at    DateTime  @default(now())
  updated_at    DateTime? @updatedAt()
  valid_until   DateTime?

  //  Fiscal
  buyer_id Int?

  //  Mercado Pago
  payment_id Int?
  hash       String

  //  Task
  notified           Boolean   @default(false)
  notified_at        DateTime?
  notified_fiscal    Boolean   @default(false)
  notified_fiscal_at DateTime?
}

model Region {
  id           Int    @id @default(autoincrement())
  latitude     Float
  longitude    Float
  region       String
  price        Float
  parking_lots Int
}
